import{a8 as w,ac as j,ab as M,d as S,ae as B,af as _,az as C,n as O,aA as I,an as P,bB as x}from"./index-3ab894b1.js";import{f as k,a as L}from"./FormItem-209cdc1b.js";const R=w("form",[j("inline",`
 width: 100%;
 display: inline-flex;
 align-items: flex-start;
 align-content: space-around;
 `,[w("form-item",{width:"auto",marginRight:"18px"},[M("&:last-child",{marginRight:0})])])]);var F=globalThis&&globalThis.__awaiter||function(n,m,t,a){function h(r){return r instanceof t?r:new t(function(f){f(r)})}return new(t||(t=Promise))(function(r,f){function v(e){try{o(a.next(e))}catch(d){f(d)}}function i(e){try{o(a.throw(e))}catch(d){f(d)}}function o(e){e.done?r(e.value):h(e.value).then(v,i)}o((a=a.apply(n,m||[])).next())})};const V=Object.assign(Object.assign({},_.props),{inline:Boolean,labelWidth:[Number,String],labelAlign:String,labelPlacement:{type:String,default:"top"},model:{type:Object,default:()=>{}},rules:Object,disabled:Boolean,size:String,showRequireMark:{type:Boolean,default:void 0},requireMarkPlacement:String,showFeedback:{type:Boolean,default:!0},onSubmit:{type:Function,default:n=>{n.preventDefault()}},showLabel:{type:Boolean,default:void 0},validateMessages:Object}),W=S({name:"Form",props:V,setup(n){const{mergedClsPrefixRef:m}=B(n);_("Form","-form",R,C,n,m);const t={},a=O(void 0),h=i=>{const o=a.value;(o===void 0||i>=o)&&(a.value=i)};function r(i,o=()=>!0){return F(this,void 0,void 0,function*(){return yield new Promise((e,d)=>{const y=[];for(const u of x(t)){const g=t[u];for(const s of g)s.path&&y.push(s.internalValidate(null,o))}Promise.all(y).then(u=>{const g=u.some(l=>!l.valid),s=[],c=[];u.forEach(l=>{var p,b;!((p=l.errors)===null||p===void 0)&&p.length&&s.push(l.errors),!((b=l.warnings)===null||b===void 0)&&b.length&&c.push(l.warnings)}),i&&i(s.length?s:void 0,{warnings:c.length?c:void 0}),g?d(s.length?s:void 0):e({warnings:c.length?c:void 0})})})})}function f(){for(const i of x(t)){const o=t[i];for(const e of o)e.restoreValidation()}}return I(k,{props:n,maxChildLabelWidthRef:a,deriveMaxChildLabelWidth:h}),I(L,{formItems:t}),Object.assign({validate:r,restoreValidation:f},{mergedClsPrefix:m})},render(){const{mergedClsPrefix:n}=this;return P("form",{class:[`${n}-form`,this.inline&&`${n}-form--inline`],onSubmit:this.onSubmit},this.$slots)}});export{W as _};
